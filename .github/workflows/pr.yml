name: PR Workflow

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      dev_env_name:
        required: false
        type: string
        default: Dev
      protected_env_name:
        required: false
        type: string
        default: Dev-Protected
      prd_env_name:
        required: false
        type: string
        default: Prd
      aws_region:
        required: true
        type: string
      tf_working_dir:
        required: true
        type: string
      aws_oidc_role:
        required: false
        type: string
        default: ${{ vars.AWS_OIDC_ROLE }}
      aws_account_id:
        required: false
        type: string
        default: ${{ vars.ACCOUNT_ID }}
      lambda_code_bucket:
        required: false
        type: string
        default: 'ccoe-ecp-${{ inputs.aws_account_id }}-eu-west-1-lambda-code'
      tf_version:
        required: false
        default: 1.5.6
        type: string
      run_lambda_steps:
        required: false
        default: true
        type: boolean
      lambdas_root_directory:
        required: false
        default: src
        type: string
      lambda_python_version:
        required: false
        default: '3.10'
        type: string

concurrency:
  group: pr-workflow
permissions:
  id-token: write
  contents: read
  pull-requests: read

jobs:
  prerequisites:
    name: "Prerequisites"
    runs-on: ubuntu-latest
    outputs:
      lambdas_changed: ${{ steps.prerequisites.outputs.lambdas_changed }}
      ecp_release_version: ${{ steps.prerequisites.outputs.ecp_release_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Prerequisites
        id: prerequisites
        uses: IAG-Ent/.github/.github/actions/prerequisites@CRSS-1754-organizations-repo-changes
        with:
          lambdas_root_directory: ${{ inputs.lambdas_root_directory }}

  lambda_tests_and_package:
    name: "Run Lambda Tests and Package"
    runs-on: ubuntu-latest
    environment: ${{ inputs.dev_env_name }}
    needs: prerequisites
    strategy:
      matrix:
        python-version: [ '${{ inputs.lambda_python_version }}' ]
    steps:
      - name: Checkout code
        if: inputs.run_lambda_steps == true && needs.prerequisites.outputs.lambdas_changed != ''
        uses: actions/checkout@v3

      - name: Run Lambda Tests and Package
        uses: IAG-Ent/.github/.github/actions/lambda_tests_and_package@CRSS-1754-organizations-repo-changes
        if: inputs.run_lambda_steps == true && needs.prerequisites.outputs.lambdas_changed != ''
        with:
          lambda_names: "${{ needs.prerequisites.outputs.lambdas_changed }}"
          lambdas_root_directory: "${{ inputs.lambdas_root_directory }}"
          python_version: "${{ matrix.python-version }}"
          aws_role: "${{ inputs.aws_oidc_role }}"
          lambda_code_bucket: "${{ inputs.lambda_code_bucket }}"

  terraform_apply:
    name: "Terraform Apply ${{ inputs.dev_env_name }}"
    runs-on: ubuntu-latest
    environment: ${{ inputs.dev_env_name }}
    concurrency: '${{ inputs.name }}-Dev'
    env:
      TF_VAR_org_environment: ${{ inputs.dev_env_name }}
      TF_VAR_ecp_release_version: ${{ needs.prerequisites.outputs.ecp_release_version }}
    needs:
      - prerequisites
      - lambda_tests_and_package
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Terraform
        uses: IAG-Ent/.github/.github/actions/terraform_run@CRSS-1754-organizations-repo-changes
        with:
          aws_role: ${{ inputs.aws_oidc_role }}
          terraform_action: 'apply'
          terraform_version: ${{ inputs.tf_version }}
          tfstate_bucket: 'ccoe-ecp-${{ inputs.aws_account_id }}-eu-west-1-tfstate'
          tfstate_dynamodb_table: 'ccoe-ecp-${{ inputs.aws_account_id }}-eu-west-1-tfstate'
          tf_working_dir: ${{ inputs.tf_working_dir }}
          aws_region: ${{ inputs.aws_region }}
          jinja_templating: ${{ needs.prerequisites.outputs.has_jinja_files }}

  wait_revert_command:
    name: "Manual testing"
    timeout-minutes: 180 #3 hours
    runs-on: ubuntu-latest
    environment: inputs.protected_env_name
    needs:
      - terraform_apply
    steps:
      - name: Revert Dev Approved
        run: |
          echo "Manual testing completed. Proceed to revert changes in Dev environment"

  lambda_tests_and_package_main:
    name: "Run Lambda Tests and Package from origin/main"
    runs-on: ubuntu-latest
    environment: ${{ inputs.prd_env_name }}
    needs:
      - prerequisites
      - wait_revert_command
    strategy:
      matrix:
        python-version: [ '${{ inputs.lambda_python_version }}' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        if: inputs.run_lambda_steps == true && needs.prerequisites.outputs.lambdas_changed != ''
        with:
          ref: main

      - name: Run Lambda Tests and Package
        uses: IAG-Ent/.github/actions/lambda_tests_and_package@CRSS-1754-organizations-repo-changes
        if: inputs.run_lambda_steps == true && needs.prerequisites.outputs.lambdas_changed != ''
        with:
          lambda_names: "${{ needs.prerequisites.outputs.lambdas_changed }}"
          lambdas_root_directory: "${{ inputs.lambdas_root_directory }}"
          python_version: "${{ matrix.python-version }}"
          aws_role: "${{ inputs.aws_oidc_role }}"
          lambda_code_bucket: "${{ inputs.lambda_code_bucket }}"

  terraform_apply_main:
    name: "Terraform Apply from origin/main"
    runs-on: ubuntu-latest
    environment: ${{ inputs.prd_env_name }}
    concurrency: '${{ inputs.name }}-Prd'
    env:
      TF_VAR_org_environment: ${{ inputs.prd_env_name }}
      TF_VAR_ecp_release_version: ${{ needs.prerequisites.outputs.ecp_release_version }}
    if: always()
    needs:
      - prerequisites
      - wait_revert_command
      - lambda_tests_and_package_main
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Run Terraform
        uses: IAG-Ent/.github/.github/actions/terraform_run@CRSS-1754-organizations-repo-changes
        with:
          aws_role: ${{ inputs.aws_oidc_role }}
          terraform_action: 'apply'
          terraform_version: ${{ inputs.tf_version }}
          tfstate_bucket: 'ccoe-ecp-${{ inputs.aws_account_id }}-eu-west-1-tfstate'
          tfstate_dynamodb_table: 'ccoe-ecp-${{ inputs.aws_account_id }}-eu-west-1-tfstate'
          tf_working_dir: ${{ inputs.tf_working_dir }}
          aws_region: ${{ inputs.aws_region }}
          jinja_templating: ${{ needs.prerequisites.outputs.has_jinja_files }}
