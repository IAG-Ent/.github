name: Terraform Run

on:
  workflow_call:
    inputs:
      aws_role:
        description: 'AWS Role to assume to perform Terraform plan'
        required: true
        type: string
      terraform_action:
        description: 'Terraform action to perform, options are "plan" and "apply"'
        default: 'plan'
        required: true
        type: string
      terraform_version:
        description: 'Terraform Version'
        default: '1.4.2'
        required: true
        type: string
      tfstate_bucket:
        description: 'The AWS S3 bucket containing the TF state file'
        required: true
        type: string
      tfstate_dynamodb_table:
        description: 'The AWS role to assume'
        required: true
        type: string
      tf_working_dir:
        description: 'The Terraform Directory to run in'
        required: true
        type: string
    outputs:
      terraform_plan_exitcode:
        description: "Whether changes are needed to the plan"
        value: ${{ steps.plan.outputs.exitcode }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ inputs.aws_role }}
          role-session-name: TerraformApplyJob

      - name: "setup-terraform"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: "Terraform Backend Config"
        id: backend
        working-directory: ${{ inputs.tf_working_dir }}
        shell: bash
        run: |
          cat > backend.conf << EOF
          bucket="${{ inputs.tfstate_bucket }}"
          dynamodb_table="${{ inputs.tfstate_dynamodb_table }}"
          EOF

      - name: "Terraform Init"
        id: init
        working-directory: ${{ inputs.tf_working_dir }}
        shell: bash
        run: terraform init -input=false -backend-config=./backend.conf

      - name: "Terraform Validate"
        id: validate
        working-directory: ${{ inputs.tf_working_dir }}
        shell: bash
        if: ${{ inputs.terraform_action == 'plan' }}
        run: terraform validate -no-color

      - name: "Terraform Plan"
        id: plan
        working-directory: ${{ inputs.tf_working_dir }}
        shell: bash
        if: ${{ inputs.terraform_action == 'plan' }}
        run: terraform plan -detailed-exitcode

      - name: "Terraform Apply"
        id: apply
        working-directory: ${{ inputs.tf_working_dir }}
        shell: bash
        if: ${{ inputs.terraform_action == 'apply' }}
        run: terraform apply -input=false -auto-approve
